[Errno 61] Connection refused - I had edited the default port from 3306 to 3307 which caused a bunch of downstream effects where the mysqlconnection.py file could not connect to MySQL. I fixed it by deleting the file where I had changed the port and restarting my computer. I think I had to restart because MySQL automatically creates a connection when my computer starts up so even though I would quit MySQL the connection was still running. You have to terminate the connect for the port reset to take place which is why I couldn't just change the default port in the my.cnf file to fix the error. I finally got it connected.

KeyError: 'occupation' - got this error the first time I tried to start up the page on the localhost. In the 'friend' file where I define the class, Friend, the default code included the line, "self.occupation = data['occupation']" in the __init__ method. This causes an error when the server file initiates the "/" route. The route creates a variable called friends in which the class method Friend.get_all() is called. This class method is in the friend.py file. The get_all method tries to query the database for all of the users that I have created. However, the table the database was trying to query did not include a column for occupation so the resulting error was saying that the ket I was calling on to query did not exist in the table.

TypeError: query_db() missing 1 required positional argument: 'query' - I removed 'query' from the parameter of the .query_db function on line 17 of the friend.py file. In the class method get_all, a variable, 'query' is set to be a string that says "SELECT * FROM friends;". Then another variable, 'results' is set. The results variable calls the connectToMySQL function which is defined in the mysqlconnection.py file. You pass a database into this function - we're doing that in the get_all class method where we pass in 'first_flask', which is the name of the database. I'm not sure how the function connects the python file to the database in MySQL. BUT, after the function is called that connects our friend file to the database, we're then running the query_db function. I'm not sure why we need to set the variable as a string and pass the variable into the function instead of just passing the string into the function... anyway, the results variable will be set to whatever the function returns, which in this case will be the table that is output when we run the select query in MySQL. Next, there's a for loop that iterates a variable, 'friend' through the results. On each iteration, 'friend' will be an object that represents the data from a row of the table in the MySQL file. 